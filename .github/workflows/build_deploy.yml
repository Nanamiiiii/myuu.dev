name: Docker Build and Push

on:
  push:
    branches:
      - 'main'
      - 'develop'
  pull_request:
    branches:
      - 'main'
  pull_request_target:
    branches:
      - 'main'

jobs:
  build:
    name: Build Docker image & push to Artifact Registry
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    if: |
      (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]')

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v36
      with:
        files: |
          .github/workflows/build_deploy.yml
          app/**
          Dockerfile
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      if: steps.changed-files.outputs.any_changed == 'true'
      
    - id: 'auth'
      name: gcloud auth
      uses: 'google-github-actions/auth@v1'
      if: steps.changed-files.outputs.any_changed == 'true'
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
    
    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v1'
      if: steps.changed-files.outputs.any_changed == 'true'
      
    - name: Configure Artifact Registry
      if: steps.changed-files.outputs.any_changed == 'true'
      run: |
        gcloud auth configure-docker asia-northeast1-docker.pkg.dev
        
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      if: steps.changed-files.outputs.any_changed == 'true'
      with:
        images: |
          ${{ secrets.REGISTRY_URL }}/nanamiiiii.dev
        tags: |
          type=schedule,pattern={{date 'YYYYMMDD'}}
          type=semver,pattern={{version}}
          type=raw,latest
          type=ref,event=branch
        
    - name: build and push image
      uses: docker/build-push-action@v4
      if: steps.changed-files.outputs.any_changed == 'true'
      with:
        push: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
        context: .
        file: Dockerfile
        target: runner
        provenance: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
  
  build-only:
    name: Only building Docker image (for dependabot)
    runs-on: ubuntu-latest
    if: |
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]')
    
    steps:
    - name: Checkout
      if: ${{ github.event_name == 'pull_request_target' }}
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: |
          ${{ secrets.REGISTRY_URL }}/nanamiiiii.dev
        tags: |
          type=schedule,pattern={{date 'YYYYMMDD'}}
          type=semver,pattern={{version}}
          type=raw,latest
          type=ref,event=branch
          
    - name: build image
      uses: docker/build-push-action@v3
      with:
        push: false
        context: .
        file: Dockerfile
        target: runner
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    name: Deploy to Cloud Run
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    needs: build
    if: |
      (github.event_name == 'push' && github.ref_name == 'main')
    
    steps:
    - id: 'auth'
      name: gcloud auth
      uses: 'google-github-actions/auth@v1'
      with:
        workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
        service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}
    
    - name: Set up Cloud SDK
      uses: 'google-github-actions/setup-gcloud@v1'
      
    - name: Deploy to Cloud Run
      run: |
        gcloud run deploy nanamiiiii-port \
          --project=${{ secrets.GCP_PROJECT_ID }} \
          --image=${{ secrets.REGISTRY_URL }}/nanamiiiii.dev:latest \
          --region="asia-northeast1" \
          --service-account=${{ secrets.GCP_SERVICE_ACCOUNT }} \
          --allow-unauthenticated \
          --port=3000
