name: Docker Build and Push

on:
  push:
    branches:
      - 'main'
      - 'develop'
  pull_request:
    branches:
      - 'main'
  pull_request_target:
    branches:
      - 'main'

jobs:

  build:

    runs-on: ubuntu-latest
    
    if: |
      (github.event_name == 'pull_request_target' && github.actor == 'dependabot[bot]') ||
      (github.event_name != 'pull_request_target' && github.actor != 'dependabot[bot]')

    steps:
    - name: Checkout
      if: ${{ github.event_name != 'pull_request_target' }}
      uses: actions/checkout@v3
      
    - name: Alt checkout
      if: ${{ github.event_name == 'pull_request_target' }}
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
      
    - name: Get changed files
      id: changed-files
      uses: tj-actions/changed-files@v34
      with:
        files: |
          .github/workflows/docker-image.yml
          app/**
          Dockerfile
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      if: steps.changed-files.outputs.any_changed == 'true'
      
    - name: Login to private registry
      uses: docker/login-action@v2
      if: steps.changed-files.outputs.any_changed == 'true'
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v4
      if: steps.changed-files.outputs.any_changed == 'true'
      with:
        images: ghcr.io/${{ github.repository }}
        tags: |
          type=schedule,pattern={{date 'YYYYMMDD'}}
          type=semver,pattern={{version}}
          type=raw,latest
          type=ref,event=branch
        
    - name: build and push image
      uses: docker/build-push-action@v3
      if: steps.changed-files.outputs.any_changed == 'true'
      with:
        push: ${{ github.event_name == 'push' && github.ref_name == 'main' }}
        context: .
        file: Dockerfile
        target: runner
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
